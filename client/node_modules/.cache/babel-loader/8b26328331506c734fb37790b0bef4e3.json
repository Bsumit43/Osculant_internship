{"ast":null,"code":"import axios from 'axios';\nimport { returnErrors } from './errorActions';\nimport { USER_LOADED, USER_LOADING, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, REGISTER_SUCCESS, REGISTER_FAIL } from './types'; // Check token & load user\n\nexport const loadUser = () => (dispatch, getState) => {\n  // User loading\n  dispatch({\n    type: USER_LOADING\n  });\n  axios.get('/api/auth/user', config).then(res => dispatch({\n    type: USER_LOADED,\n    payload: res.data\n  })).catch(err => {\n    dispatch(returnErrors(err.response.data, err.response.status));\n    dispatch({\n      type: AUTH_ERROR\n    });\n  });\n}; // // Register User\n// export const register = ({ name, email, password }: IAuthFunction) => (\n//   dispatch: Function\n// ) => {\n//   // Headers\n//   const config = {\n//     headers: {\n//       'Content-Type': 'application/json'\n//     }\n//   };\n//   // Request body\n//   const body = JSON.stringify({ name, email, password });\n//   axios\n//     .post('/api/auth/register', body, config)\n//     .then(res =>\n//       dispatch({\n//         type: REGISTER_SUCCESS,\n//         payload: res.data\n//       })\n//     )\n//     .catch(err => {\n//       dispatch(\n//         returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL')\n//       );\n//       dispatch({\n//         type: REGISTER_FAIL\n//       });\n//     });\n// };\n// // Login User\n// export const login = ({ email, password }: IAuthFunction) => (\n//   dispatch: Function\n// ) => {\n//   // Headers\n//   const config = {\n//     headers: {\n//       'Content-Type': 'application/json'\n//     }\n//   };\n//   // Request body\n//   const body = JSON.stringify({ email, password });\n//   axios\n//     .post('/api/auth/login', body, config)\n//     .then(res =>\n//       dispatch({\n//         type: LOGIN_SUCCESS,\n//         payload: res.data\n//       })\n//     )\n//     .catch(err => {\n//       dispatch(\n//         returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL')\n//       );\n//       dispatch({\n//         type: LOGIN_FAIL\n//       });\n//     });\n// };\n// // Logout User\n// export const logout = () => {\n//   return {\n//     type: LOGOUT_SUCCESS\n//   };\n// };\n// Setup config/headers and token\n\nexport const tokenConfig = getState => {\n  // Get token from localstorage\n  const token = getState().auth.token; // Headers\n\n  const config = {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  }; // If token, add to headers\n\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n\n  return config;\n};","map":{"version":3,"sources":["/Users/sumitbhagat/Documents/API/client/src/Actions/authActions.js"],"names":["axios","returnErrors","USER_LOADED","USER_LOADING","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","REGISTER_SUCCESS","REGISTER_FAIL","loadUser","dispatch","getState","type","get","config","then","res","payload","data","catch","err","response","status","tokenConfig","token","auth","headers"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SACEC,WADF,EAEEC,YAFF,EAGEC,UAHF,EAIEC,aAJF,EAKEC,UALF,EAMEC,cANF,EAOEC,gBAPF,EAQEC,aARF,QASO,SATP,C,CAWA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACpD;AACAD,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEV;AAAR,GAAD,CAAR;AAOAH,EAAAA,KAAK,CACFc,GADH,CACO,gBADP,EACyBC,MADzB,EAEGC,IAFH,CAEQC,GAAG,IACPN,QAAQ,CAAC;AACPE,IAAAA,IAAI,EAAEX,WADC;AAEPgB,IAAAA,OAAO,EAAED,GAAG,CAACE;AAFN,GAAD,CAHZ,EAQGC,KARH,CAQSC,GAAG,IAAI;AACZV,IAAAA,QAAQ,CAACV,YAAY,CAACoB,GAAG,CAACC,QAAJ,CAAaH,IAAd,EAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CAAR;AACAZ,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAET;AADC,KAAD,CAAR;AAGD,GAbH;AAcD,CAvBM,C,CA2BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMoB,WAAW,GAAIZ,QAAD,IAAwB;AACjD;AACA,QAAMa,KAAK,GAAGb,QAAQ,GAAGc,IAAX,CAAgBD,KAA9B,CAFiD,CAIjD;;AACA,QAAMV,MAAsB,GAAG;AAC7BY,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADoB,GAA/B,CALiD,CAWjD;;AACA,MAAIF,KAAJ,EAAW;AACTV,IAAAA,MAAM,CAACY,OAAP,CAAe,cAAf,IAAiCF,KAAjC;AACD;;AAED,SAAOV,MAAP;AACD,CAjBM","sourcesContent":["import axios from 'axios';\nimport { returnErrors } from './errorActions';\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL\n} from './types';\n\n// Check token & load user\nexport const loadUser = () => (dispatch, getState) => {\n  // User loading\n  dispatch({ type: USER_LOADING });\n\n\n  \n\n\n\n  axios\n    .get('/api/auth/user', config)\n    .then(res =>\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: AUTH_ERROR\n      });\n    });\n};\n\n\n\n// // Register User\n// export const register = ({ name, email, password }: IAuthFunction) => (\n//   dispatch: Function\n// ) => {\n//   // Headers\n//   const config = {\n//     headers: {\n//       'Content-Type': 'application/json'\n//     }\n//   };\n\n//   // Request body\n//   const body = JSON.stringify({ name, email, password });\n\n//   axios\n//     .post('/api/auth/register', body, config)\n//     .then(res =>\n//       dispatch({\n//         type: REGISTER_SUCCESS,\n//         payload: res.data\n//       })\n//     )\n//     .catch(err => {\n//       dispatch(\n//         returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL')\n//       );\n//       dispatch({\n//         type: REGISTER_FAIL\n//       });\n//     });\n// };\n\n// // Login User\n// export const login = ({ email, password }: IAuthFunction) => (\n//   dispatch: Function\n// ) => {\n//   // Headers\n//   const config = {\n//     headers: {\n//       'Content-Type': 'application/json'\n//     }\n//   };\n\n//   // Request body\n//   const body = JSON.stringify({ email, password });\n\n//   axios\n//     .post('/api/auth/login', body, config)\n//     .then(res =>\n//       dispatch({\n//         type: LOGIN_SUCCESS,\n//         payload: res.data\n//       })\n//     )\n//     .catch(err => {\n//       dispatch(\n//         returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL')\n//       );\n//       dispatch({\n//         type: LOGIN_FAIL\n//       });\n//     });\n// };\n\n// // Logout User\n// export const logout = () => {\n//   return {\n//     type: LOGOUT_SUCCESS\n//   };\n// };\n\n// Setup config/headers and token\nexport const tokenConfig = (getState: Function) => {\n  // Get token from localstorage\n  const token = getState().auth.token;\n\n  // Headers\n  const config: IConfigHeaders = {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  };\n\n  // If token, add to headers\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n\n  return config;\n};"]},"metadata":{},"sourceType":"module"}