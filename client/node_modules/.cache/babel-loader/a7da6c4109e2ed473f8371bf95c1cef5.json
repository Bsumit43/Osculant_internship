{"ast":null,"code":"var _jsxFileName = \"/Users/sumitbhagat/Documents/Intern/client/src/components/ItemModal.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios'; // import {v1 as uuid} from 'uuid';\n\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, FormText, Input } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { addItem } from '../Actions/itemActions';\n\nclass ItemModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      name: '',\n      cover: '',\n      description: ''\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.onChange = e => {\n      // console.log(e.target.files[0])\n      // this.setState({ [e.target.name] : e.target.value});\n      this.setState({\n        file: e.target.files[0]\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const formData = new FormData();\n      formData.append('cover', this.state.file);\n      const config = {\n        headers: {\n          'content-type': 'multipart/form-data'\n        }\n      };\n      axios.post(\"/api/items\", formData, config).then(response => {\n        alert(\"The file is successfully uploaded\");\n      }).catch(error => {}); // console.log(this.state.cover)\n\n      const newItem = {\n        // id : uuid(),\n        name: this.state.name,\n        file: null,\n        cover: this.state.cover,\n        description: this.state.description\n      }; //Add Item via addItem Action\n\n      this.props.addItem(newItem); // console.log(newItem)\n\n      this.toggle();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginBottom: '2rem'\n      },\n      onClick: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, \"Add Item\"), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, \"Add to Shopping List \"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      method: \"POST\",\n      enctype: \"multipart/form-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }\n    }, \"Item\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      id: \"item\",\n      placeholder: \"Add Shopping Item\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"coverPic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }\n    }, \"File\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"file\",\n      name: \"cover\",\n      id: \"exampleFile\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(FormText, {\n      color: \"muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    }, \"This is some placeholder block-level help text for the above input. It's a bit lighter and easily wraps to a new line.\"), /*#__PURE__*/React.createElement(Label, {\n      for: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 33\n      }\n    }, \"Item\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"description\",\n      id: \"description\",\n      placeholder: \"Add Shopping Item\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginTop: '2rem'\n      },\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 33\n      }\n    }, \"Add Item\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  item: state.item\n});\n\nexport default connect(mapStateToProps, {\n  addItem\n})(ItemModal);","map":{"version":3,"sources":["/Users/sumitbhagat/Documents/Intern/client/src/components/ItemModal.js"],"names":["React","Component","axios","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","FormText","Input","connect","addItem","ItemModal","state","modal","name","cover","description","toggle","setState","onChange","e","file","target","files","onSubmit","preventDefault","formData","FormData","append","config","headers","post","then","response","alert","catch","error","newItem","props","render","marginBottom","marginTop","mapStateToProps","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n// import {v1 as uuid} from 'uuid';\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    FormText,\n    Input\n} from 'reactstrap';\nimport {connect} from 'react-redux';\nimport { addItem } from '../Actions/itemActions';\n\nclass ItemModal extends Component {\n    state = {\n        modal : false,\n        name : '',\n        cover:'',\n        description:''\n    }\n    toggle = () => {\n        this.setState({\n            modal : !this.state.modal\n        });\n    }\n    onChange = (e) => {\n        // console.log(e.target.files[0])\n        // this.setState({ [e.target.name] : e.target.value});\n        this.setState({file:e.target.files[0]})\n    }\n    \n    onSubmit = e => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('cover',this.state.file);\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        };\n        axios.post(\"/api/items\",formData,config)\n            .then((response) => {\n                alert(\"The file is successfully uploaded\");\n            }).catch((error) => {\n        });\n        // console.log(this.state.cover)\n        const newItem = {\n            // id : uuid(),\n            name: this.state.name,\n            file: null,\n            cover:this.state.cover,\n            description:this.state.description\n        }\n\n        //Add Item via addItem Action\n        this.props.addItem(newItem);\n        // console.log(newItem)\n\n        this.toggle();\n    }\n\n    render() {\n        return (\n            <div>\n                <Button\n                color=\"dark\"\n                style={{marginBottom:'2rem'}}\n                onClick={this.toggle}\n                >Add Item</Button>\n\n                <Modal\n                isOpen={this.state.modal}\n                toggle={this.toggle}\n                >\n                    <ModalHeader toggle={this.toggle}>Add to Shopping List </ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.onSubmit} method='POST' enctype=\"multipart/form-data\">\n                            <FormGroup>\n                                <Label for=\"item\">Item</Label>\n                                <Input\n                                type=\"text\"\n                                name=\"name\"\n                                id=\"item\"\n                                placeholder=\"Add Shopping Item\"\n                                onChange={this.onChange}\n                                ></Input>\n\n\n\n                                <Label for=\"coverPic\">File</Label>\n                                <Input type=\"file\" name=\"cover\" id=\"exampleFile\" onChange={this.onChange} />\n                                <FormText color=\"muted\">\n                                This is some placeholder block-level help text for the above input.\n                                It's a bit lighter and easily wraps to a new line.\n                                </FormText>\n      \n\n\n                                <Label for=\"description\">Item</Label>\n\n                                <Input\n                                type=\"text\"\n                                name=\"description\"\n                                id=\"description\"\n                                placeholder=\"Add Shopping Item\"\n                                onChange={this.onChange}\n                                ></Input>\n                                <Button\n                                color=\"dark\"\n                                style={{marginTop: '2rem'}}\n                                block\n                                >Add Item</Button>\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    \n    item: state.item\n})\nexport default connect(mapStateToProps,{addItem})(ItemModal);"]},"metadata":{},"sourceType":"module"}